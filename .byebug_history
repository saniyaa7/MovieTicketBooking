c
@movieshow.save
c
valid_params
ticket.movie_show_id
response.status
c
response.status
c
response.body
c
response.status
c
User.find_by(id: user.id)
JSON.parse(response.body)
expect(response).to have_http_status(:success)
n
response
c
user
c
n
user
:user
User
params
user
c
user.id
user
params
c
user
user.age
response.body
valid_update_params
c
response.body
valid_update_params
c
expected_response
 response.body
      expect(JSON.parse(response.body)).to include(expected_response)
      }
        "role" => user.role.name  # Assuming you want the role name, adjust as needed
        "phone_no" => user.phone_no,
        "name" => user.name,
        "id" => user.id,
        "age" => user.age,
      expected_response = {
      # Update the expectation to match the actual response
      expect(response).to have_http_status(:success)
      get :show, params: { id: user.id }
 response.body
    let(:user) { create(:user) }
  describe "GET #show" do
response.body
c
response.body
c
invalid_params
c
response.body
c
response.body
c
response.body
c
response.body
c
response.body
response
c
response.body
c
response.body
response
n
